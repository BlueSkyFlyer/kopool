#= depend_on_asset "home.html"
#= depend_on_asset "nfl_teams/index.html"
#= depend_on_asset "weeks/index.html"

# This line is related to our Angular app, not to our
# HomeCtrl specifically. This is basically how we tell
# Angular about the existence of our application.
# I added a lot of code here for Devise integration
@kopool = angular.module("kopool", ["ngRoute", "sessionService"])
  .config(["$httpProvider", ($httpProvider) ->
    $httpProvider.defaults.headers.common["X-CSRF-Token"] = $("meta[name=csrf-token]").attr("content")

    interceptor = ["$location", "$rootScope", "$q", ($location, $rootScope, $q) ->
      success = (response) ->
        response

      error = (response) ->
        if response.status is 401
          $rootScope.$broadcast "event:unauthorized"
          $location.path "/users/sign_in"
          return response
        $q.reject response

      (promise) ->
        promise.then success, error
    ]
    $httpProvider.responseInterceptors.push(interceptor);
])

# This routing directive tells Angular about the default
# route for our application. The term "otherwise" here
# might seem somewhat awkward, but it will make more
# sense as we add more routes to our application.
@kopool.config(['$routeProvider', ($routeProvider) ->

  console.log("routeprovider: " + $routeProvider)

  $routeProvider.
    when('/nfl_teams', {
      templateUrl: '<%= asset_path("nfl_teams/index.html") %>',
      controller: 'NflTeamsCtrl'
    }).
    when('/weeks', {
      templateUrl: '<%= asset_path("weeks/index.html") %>',
      controller: 'WeeksCtrl'
    }).
    when('/seasons/:season_id/weeks', {
      templateUrl: '<%= asset_path("weeks/index.html") %>',
      controller: 'WeeksCtrl'
    }).
    when('/users/login', {
      templateUrl:'/users/login.html',
      controller: 'UsersCtrl'
    }).
    when('/users/register', {
      templateUrl:'/users/register.html',
      controller: 'UsersCtrl'
    }).
    otherwise({
      templateUrl: '<%= asset_path("home.html") %>'
      controller: 'HomeCtrl'
    })
])


# @kopool.config ('$httpProvider') ->
#   authToken = $("meta[name=\"csrf-token\"]").attr("content")
#   $httpProvider.defaults.headers.common["X-CSRF-TOKEN"] = authToken

